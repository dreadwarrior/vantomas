# project repository setup
#
REPOROOT=https://github.com/dreadwarrior/
REPO=vantomas
GITBRANCH=master

# target system setup
#
# NOTE: these are intentionally left blank as we'll fetch them from
# the secret properties file. Currently the user has to confirm a
# second time in interactive mode.
#
SSHUSER=
SSHHOST=
SSHPORT=
REMOTEPATH=

# deployment method specific configuration
#
RSYNC_DO_DRY_RUN=1
RSYNC_DONT_DELETE_MORE_THAN=100

# Custom helper functions
#

# -----------------------------------------------------------------------------
# function_read_property
#
# Reads a given property from the target's secret properties file.
# -----------------------------------------------------------------------------
function_read_property() {
  sed '/^\#/d' ${PROJECTPATH}/build.prod.secret.properties | grep ${1} | tail -n 1 | cut -d "=" -f2-
}

# Release tool hooks
#

# -----------------------------------------------------------------------------
# function_clone_pre
#
# Called just before cloning the project.
# -----------------------------------------------------------------------------
function_clone_pre() {
  fn_dialog_info "Reading secret target properties..."

  SSHUSER=$(function_read_property 'ssh.user')
  SSHHOST=$(function_read_property 'ssh.host')
  SSHPORT=$(function_read_property 'ssh.port')
  REMOTEPATH=$(function_read_property 'remote.path')

  if [ $FORCE = 0 ]; then
    function_summary
  fi
}

# -----------------------------------------------------------------------------
# function_clone_post
#
# Is called after cloning the project. Use this to prepare the project before
# deployment.
# -----------------------------------------------------------------------------
function_clone_post() {
  # package management: backend
  #
  fn_dialog_progressbox "curl -sS https://getcomposer.org/installer | php >/dev/null" "Installing composer..."
  fn_dialog_progressbox "php composer.phar install -o --no-dev --no-progress --no-ansi >/dev/null" "Installing composer dependencies..."

  # package management: frontend
  #
  fn_dialog_progressbox "curl https://raw.githubusercontent.com/creationix/nvm/v0.24.1/install.sh | NVM_DIR=./.nvm bash >/dev/null" "Installing nvm..."
  fn_dialog_progressbox "./install-node.sh >/dev/null" "Installing node.js..."
  fn_dialog_progressbox "./setup-fe.sh >/dev/null" "Setting up Frontend stack..."

  # run build
  #
  fn_dialog_waitingbox "cp -f ${PROJECTPATH}/build.prod.secret.properties ./" "Copying the secret build properties file..."
  fn_dialog_progressbox "php ${PROJECTPATH}/vendor/bin/phing typo3:run main:copy-web-data config:migrations -Denvironment=prod -Dimport.dir=${PROJECTPATH}/" "Running phing target build:run with environment 'prod'"
}

# -----------------------------------------------------------------------------
# function_rsync_post
#
# Is called after the deployment finishes. Use this to perform task on the
# target machine (e.g. clearing caches)
# -----------------------------------------------------------------------------
function_rsync_post() {
  # Creates user data directories on the remote host
  fn_dialog_progressbox "ssh -p ${SSHPORT} ${SSHUSER}@${SSHHOST} 'mkdir -p ${REMOTEPATH}/web/{fileadmin/user_upload/_temp_,typo3conf/l10n,typo3temp/llxml,uploads/{media,pics,tf}}'" "Creating user data directories"

  # Creates index.html files on the remote host to prevent directory listing.
  fn_dialog_progressbox "ssh -p ${SSHPORT} ${SSHUSER}@${SSHHOST} 'touch ${REMOTEPATH}/web/{fileadmin/{user_upload,user_upload/_temp_},typo3temp,uploads/{media,pics,tf}}/index.html'" "Creating index.html files to prevent directory listing"

  fn_dialog_yesorno "Clear TYPO3.CMS code cache on remote machine? (Y/n)"
  if [ "$RETURN" = "1" ]; then
    fn_dialog_progressbox "ssh -p ${SSHPORT} ${SSHUSER}@${SSHHOST} 'cd ${REMOTEPATH} && rm -rf web/typo3temp/Cache/Code/*'" "Remove cache files"
    fn_dialog_progressbox "ssh -p ${SSHPORT} ${SSHUSER}@${SSHHOST} 'mysql -u${MYSQL_USERNAME_REMOTE} -p${MYSQL_PASSWORD_REMOTE} -e \'TRUNCATE TABLE cf_extbase_reflection; TRUNCATE TABLE cf_extbase_reflection_tags; TRUNCATE TABLE cf_extbase_object; TRUNCATE TABLE cf_extbase_object_tags;\''"
  fi
}
