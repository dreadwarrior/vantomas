#!/bin/sh

set -e

cd "$(dirname "$0")/.."

. ./.env

fgWhite='\033[1m'
clrReset='\033[0m'

usage() {
    echo "
    ${fgWhite}USAGE${clrReset}

        $0 <sub console> [<sub console arguments>]

    ${fgWhite}SUB CONSOLES${clrReset}

        * db
            Provides client-access to the db service. Useful for importing / export database dumps.

        * php
            Provide access to the CLI SAPI of the PHP interpreter.

        * composer
            Provide access to the PHP package manager.

        * npm
            Provide access to the node.js package manager.

"
}

log_run() {
    tool="$1"
    shift
    echo "==> Running ${fgWhite}${tool}${clrReset} with ${fgWhite}$*${clrReset}"
}

db_cli() {
    log_run "db" "$@"

    docker run --rm -ti \
        --env-file=.docker/db/.env \
        --net="${COMPOSE_PROJECT_NAME}_default" \
        -v "$(pwd)":/app \
        "${COMPOSE_PROJECT_NAME}"/db-cli \
        "$@"
}

php_cli() {
    log_run "php" "$@"

    docker run --rm -ti \
        --net="${COMPOSE_PROJECT_NAME}_default" \
        -v "$(pwd)":/app \
        "${COMPOSE_PROJECT_NAME}"/php-cli \
        "$@"
}

composer() {
    log_run "composer" "$@"

    docker run --rm \
        -v "$(pwd)":/app \
        -v composer-cache:/composer/cache \
        -w /app \
        composer/composer:${COMPOSER_VERSION} \
        "$@"
}

npm_cli() {
    log_run "npm" "$@"

    docker run --rm \
        -v npm-cache:/home/npm/.npm \
        -v "$(pwd)":/app \
        -w /app \
        "${COMPOSE_PROJECT_NAME}"/npm-cli \
        "$@"
}

if [ $# -eq 0 ]; then
    usage
    exit 0
fi

while [ $# -gt 0 ]; do
    case "$1" in
        db)
            shift
            db_cli "$@"
            break;;
        php)
            shift
            php_cli "$@"
            break;;
        composer)
            shift
            composer "$@"
            break;;
        npm)
            shift
            npm_cli "$@"
            break;;
        -* | -h | --help)
            usage
            exit 0
            ;;
    esac
    shift
done
