<?xml version="1.0" encoding="UTF-8"?>
<project name="vantomas-release" default="help">

	<target name="help">
		<echo>
			You can't run this file directly. It is intended to be included
			within the main build file build.xml.
		</echo>
	</target>
	
	<target name="release:rsync" if="releasing">
		<echo>Rsyncing to ${environment}</echo>
		<exec
			dir="${project.basedir}"
			executable="rsync"
			checkreturn="true"
			passthru="true">

			<arg line="-ravc" />
			<arg line="--progress" />
			<arg line="--delete" />
			<arg line="--rsh='ssh -p${ssh.port}'" />
			<arg line="--exclude-from=${project.basedir}/rsync/release_exclude.txt" />
			<arg line="." />
			<arg line="${ssh.user}@${ssh.host}:${remote.path}/" />
		</exec>
		
		<echo>Uploading .htpasswd</echo>
		<exec
			dir="${project.basedir}"
			executable="rsync"
			checkreturn="false"
			passthru="true">

			<arg line="-ravc" />
			<arg line="--progress" />
			<arg line="--rsh='ssh -p${ssh.port}'" />
			<arg value="${project.basedir}/data/.htpasswd" />
			<arg line="${ssh.user}@${ssh.host}:${remote.path}/" />
		</exec>

		<echo>Creating probably not existing files + directories</echo>
		<exec
			executable="ssh"
			checkreturn="true"
			passthru="true">

			<arg line="-p ${ssh.port}" />
			<arg line="${ssh.user}@${ssh.host}" />
			<arg line="'mkdir -p ${remote.path}/web/{typo3temp,llxml} &amp;&amp; mkdir -p ${remote.path}/web/typo3conf/l10n &amp;&amp; mkdir -p ${remote.path}/web/uploads/{media,pics,tf} &amp;&amp; mkdir -p ${remote.path}/web/fileadmin/user_upload/_temp_'" />
		</exec>
		<exec
			executable="ssh"
			checkreturn="true"
			passthru="true">

			<arg line="-p ${ssh.port}" />
			<arg line="${ssh.user}@${ssh.host}" />
			<arg line="'touch ${remote.path}/web/typo3temp/index.html &amp;&amp; touch ${remote.path}/web/uploads/media/index.html &amp;&amp; touch ${remote.path}/web/uploads/pics/index.html &amp;&amp; touch ${remote.path}/web/uploads/tf/index.html &amp;&amp; touch ${remote.path}/web/fileadmin/user_upload/index.html &amp;&amp; ${remote.path}/web/fileadmin/user_upload/_temp_/index.html'" />
		</exec>
	</target>

	<target
		name="release"
		description="Releases the TYPO3.CMS project"
		if="release.target">

		<property
			file="./build.${release.target}.secret.properties"
			prefix="release_properties" />

		<input propertyName="release.abort" validArgs="Y,N">
		You're about to release the current project to a remote host.

		Host: ${release_properties.ssh.host}
		Path: ${release_properties.remote.path}

		Are you sure you want to proceed?
		</input>
		
		<if>
			<equals arg1="${release.abort}" arg2="N" />
			<then>
				<fail>
		Release aborted!
				</fail>
			</then>
		</if>

		<echo>Creating temp dir and cloning project...</echo>
		<delete
			dir="/tmp/tmp-${phing.project.name}" />
		<mkdir
			dir="/tmp/tmp-${phing.project.name}" />

		<exec
			command="git config remote.origin.url"
			checkreturn="true"
			outputProperty="git.remote.url" />

		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="git clone ${git.remote.url} ."
			checkreturn="true"
			passthru="true" />

		<echo>Installing composer into temp dir</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="curl -sS https://getcomposer.org/installer | php"
			passthru="true" />

		<echo>Installing dependencies (--no-dev)</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="COMPOSER_PROCESS_TIMEOUT=2000 /usr/bin/env php composer.phar install --prefer-dist --no-dev"
			passthru="true" />

		<echo>Installing node.js modules and bower components</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="/usr/bin/env npm install"
			passthru="true" />
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="/usr/bin/env bower install --config.interactive=false"
			passthru="true" />

		<echo>Copying secret properties file for ${release.target}</echo>
		<copy
			file="build.${release.target}.secret.properties"
			todir="/tmp/tmp-${phing.project.name}" />

		<echo>Running build toolchain for ${release.target}</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			executable="/usr/bin/env"
			checkreturn="true"
			passthru="true">

			<arg value="php" />
			<arg value="${project.basedir}/vendor/bin/phing" />
			<arg line="-Denvironment=${release.target}" />
			<arg line="-Dreleasing=1" />
		</exec>
	</target>
</project>