<?xml version="1.0" encoding="UTF-8"?>
<project name="vantomas" default="run">
	<property file="./build.${environment}.properties" />
	<property file="./secret.${environment}.properties" />

	<target name="qa:prepare">
		<mkdir dir="${project.basedir}/build" />
		<mkdir dir="${project.basedir}/build/phpunit-coverage" />
	</target>

	<target name="qa:phpmd" description="Runs phpmd on src/" depends="qa:prepare">
		<!--
		$ php vendor/bin/phpmd src/ xml codesize,unusedcode,naming,design - -reportfile build/phpmd.xml - -suffixes php
		-->
		<phpmd rulesets="codesize,unusedcode,naming,design">
			<formatter type="xml" outfile="${project.basedir}/build/phpmd.xml" />

			<fileset dir="${project.basedir}/src">
				<include name="**/Classes/**/*.php" />
				<exclude name="**/vendor/**" />
			</fileset>

		</phpmd>
	</target>

	<target name="qa:pdepend" description="Runs pdepend on src/" depends="qa:prepare">
		<!--
		$ php vendor/bin/pdepend - -jdepend-chart=./build/jdepend.svg - -jdepend-xml=./build/jdepend.xml - -overview-pyramid=./build/jdepend-pyramid.svg - -summary-xml=./build/pdepend-summary.xml - -suffix=php ./src/
		-->
		<phpdepend>
			<logger type="jdepend-chart" outfile="${project.basedir}/build/jdepend.svg" />
			<logger type="jdepend-xml" outfile="${project.basedir}/build/jdepend.xml" />
			<logger type="overview-pyramid" outfile="${project.basedir}/build/pdepend-pyramid.svg" />
			<logger type="phpunit-xml" outfile="${project.basedir}/build/pdepend-coverage.xml" />
			<logger type="summary-xml" outfile="${project.basedir}/build/pdepend-summary.xml" />

			<fileset dir="${project.basedir}/src">
				<include name="**/Classes/**/*.php" />
				<exclude name="**/vendor/**" />
			</fileset>
		</phpdepend>
	</target>

	<target name="qa:phploc" description="Runs phploc on src/" depends="qa:prepare">
		<!--
		$ php vendor/bin/phploc - -names="*.php" - -log-csv="./build/phploc.csv" - -log-xml="./build/phploc.xml" - -progress ./src/
		-->
		<!--
		<phploc reportType="xml" reportName="phploc" reportDirectory="${project.basedir}/build">
			<fileset dir="${project.basedir}/src">
				<include name="**/Classes/**/*.php" />
				<exclude name="**/vendor/**" />
			</fileset>
		</phploc>
		-->
		<exec command="/usr/bin/env php ${project.basedir}/vendor/bin/phploc --names=*.php --log-csv=${project.basedir}/build/phploc.csv --log-xml=${project.basedir}/build/phploc.xml --progress ${project.basedir}/src/" />
	</target>

	<target name="qa:phpcpd" description="Runs phpcpd on src/" depends="qa:prepare">
		<!--
		$ php vendor/bin/phpcpd - -names=*.php - -names-exclude=ext_emconf.php,ext_localconf.php,ext_tables.php - -log-pmd=./build/phpcpd.xml - -progress ./src/
		-->
		<!--
		<phpcpd>
			<formatter type="pmd" outfile="${project.basedir}/build/phpcpd.xml" />
				
			<fileset dir="${project.basedir}/src">
				<include name="**/Classes/**/*.php" />
				<exclude name="**/vendor/**" />
			</fileset>
		</phpcpd>
		-->
		<exec command="/usr/bin/env php ${project.basedir}/vendor/bin/phpcpd --names=*.php --names-exclude=ext_emconf.php,ext_localconf.php,ext_tables.php --log-pmd=${project.basedir}/build/phpcpd.xml --progress ./src/" />
	</target>

	<target name="qa:phpcs" description="Runs phpcs on src/" depends="qa:prepare">
		<exec command="/usr/bin/env php ${project.basedir}/vendor/bin/phpcs -np --report=checkstyle --report-checkstyle=${project.basedir}/build/phpcs-checkstyle.xml --standard=TYPO3CMS --ignore=**/vendor/** -d error_reporting='E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT &amp; ~E_DEPRECATED' --extensions=php ${project.basedir}/src/" />
	</target>

	<target name="qa:phpunit" description="Runs phpunit on src/" depends="qa:prepare">
		<exec command="/usr/bin/env php ${project.basedir}/vendor/bin/phpunit -c ${project.basedir}/phpunit.dist.xml" passthru="true" />
	</target>

	<target name="qa" description="Runs the QA toolchain" depends="qa:phpmd, qa:pdepend, qa:phploc, qa:phpcpd, qa:phpcs, qa:phpunit">
		<echo>QA toolchain ready.</echo>
	</target>

	<target name="cleanup" description="Cleans up the release directory">
		<echo msg="Cleaning up ${buildDir}..." />
		<delete includeemptydirs="true">
			<fileset dir="${buildDir}">
				<include name="**" />

				<exclude name="fileadmin/**" />
				<exclude name="typo3conf/l10n/**" />
				<exclude name="typo3conf/AdditionalConfiguration.php" />
				<exclude name="typo3conf/LocalConfiguration.php" />
				<exclude name="typo3conf/PackageStatest.php" />
				<exclude name="typo3temp/**" />
				<exclude name="uploads/**" />
			</fileset>
		</delete>
	</target>

	<target name="compass:compile" description="Compiles the compass files">
		<echo msg="Performing compass compilation..." />
		<if>
			<istrue value="${noColors}" />
			<then>
				<exec command="/usr/bin/env compass compile --boring --config ${project.basedir}/config.rb" dir="." checkreturn="true" passthru="true" />
			</then>
			<else>
				<exec command="/usr/bin/env compass compile --config ${project.basedir}/config.rb" dir="." checkreturn="true" passthru="true" />
			</else>
		</if>
	</target>

	<target name="typo3:prepare">
		<mkdir dir="web/fileadmin/user_upload" />
		<mkdir dir="web/typo3conf/ext" />
		<mkdir dir="web/typo3conf/l10n" />
		<mkdir dir="web/typo3temp" />
		<mkdir dir="web/uploads/media" />
		<mkdir dir="web/uploads/pics" />
	</target>

	<target name="typo3:copy-core" description="Copies the TYPO3 core into the release directory." depends="typo3:prepare">
		<copy todir="${buildDir}" overwrite="true">
			<fileset dir="./vendor/typo3/cms/">
				<include name="**/**" />

				<exclude name="**/.git*" />
				<exclude name="**/.travis.yml" />
				<exclude name="**/ChangeLog" />
				<exclude name="**/GPL.txt" />
				<exclude name="**/INSTALL.md" />
				<exclude name="**/LICENSE.txt" />
				<exclude name="**/NEWS.md" />
				<exclude name="**/README.md" />
			</fileset>
		</copy>
	</target>

	<target name="typo3:copy-vendor-extensions" description="Copies the vendor extension into the typo3conf/ext/ release directory" depends="typo3:prepare">
		<copy todir="${buildDir}/typo3conf/ext">
			<fileset dir="./vendor/typo3-cms-extension">
				<include name="**/**" />

				<exclude name="**/.git*" />
			</fileset>
		</copy>
	</target>

	<target name="typo3:copy-project-extensions" description="Copies the project extensions into the typo3conf/ext/ release directory" depends="typo3:prepare">
		<copy todir="src/" overwrite="true">
			<mapper type="regexp" from="^(.*)\.tpl\.(.*)" to="\1.\2" />

			<fileset dir="./src">
				<include name="**/**" />

				<exclude name="**/.git*" />
			</fileset>
		</copy>

		<copy todir="${buildDir}/typo3conf/ext" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>

			<fileset dir="./src">
				<include name="**/**" />

				<exclude name="**/.git*" />
				<exclude name="**/*.tpl.*" />
			</fileset>
		</copy>
	</target>

	<target name="typo3:copy-extensions" description="Copies the extensions into typo3conf/ext/ release directory" depends="typo3:copy-vendor-extensions, typo3:copy-project-extensions">
		<echo>Extensions copied.</echo>
	</target>

	<target name="copy-web-data" description="Copies data/web/ into the release directory">
		<copy todir="./data/web">
			<mapper type="regexp" from="^(.*)\.tpl\.(.*)" to="\1.\2" />

			<fileset dir="./data/web">
				<include name="**/**" />
			</fileset>
		</copy>

		<copy todir="${buildDir}" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>

			<fileset dir="./data/web">
				<include name="**/**" />

				<exclude name="**/*.tpl.*" />
			</fileset>
		</copy>
	</target>

	<!-- compass:compile,  -->
	<target name="run" depends="qa, cleanup, typo3:copy-core, typo3:copy-extensions, copy-web-data" if="environment">
		<echo>Build finished.</echo>
	</target>
	
	<target name="sync:db" description="Downsyncs the database from the remote host.">
		<exec
			command="ssh -p ${ssh.port} ${ssh.user}@${ssh.host} 'cd ${remote.path} &amp;&amp; mysqldump -u${database.username} -p${database.password} -h ${database.host} ${database.name} | gzip -9 &gt; dump.sql.gz'" />

		<exec
			command="rsync -avz --progress ${ssh.user}@${ssh.host}:${remote.path}/dump.sql.gz ${project.basedir}/data/db/"
			passthru="true" />

		<exec
			command="ssh -p ${ssh.port} ${ssh.user}@${ssh.host} 'cd ${remote.path} &amp;&amp; rm -f dump.sql.gz'" />
	</target>
	
	<target name="sync:files" description="Downsyncs the content assets">
		<exec
			command="rsync -ravc --progress --rsh='ssh -p${ssh.port}' --exclude '**/_temp_' --exclude '**/_temp_/*' --exclude '**/_processed_' --exclude '**/_processed_/*' --exclude '**/templates' --exclude '**/templates/*' ${ssh.user}@${ssh.host}:${remote.path}/fileadmin/ ${project.basedir}/data/web/fileadmin"
			passthru="true" />
	</target>
</project>