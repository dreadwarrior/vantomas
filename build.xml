<?xml version="1.0" encoding="UTF-8"?>
<project name="vantomas" default="run">
	<property name="environment" value="dev" />

	<property file="./build.${environment}.properties" />
	<property file="./secret.${environment}.properties" />

	<target name="qa:prepare" unless="releasing">
		<mkdir dir="${project.basedir}/build/phpunit-coverage" />
	</target>

	<target name="qa:phpmd" description="Runs phpmd on src/" depends="qa:prepare" unless="releasing">
		<exec
			executable="/usr/bin/env"
			checkreturn="false"
			passthru="true">

			<arg value="php" />
			<arg value="./vendor/bin/phpmd" />
			<arg value="./src/vantomas/Classes/" />
			<arg value="xml" />
			<arg value="codesize,unusedcode,naming,design" />
			<arg line="--reportfile ./build/phpmd.xml" />
			<arg line="--suffixes php" />
		</exec>
	</target>

	<target name="qa:pdepend" description="Runs pdepend on src/" depends="qa:prepare" unless="releasing">
		<exec
			executable="/usr/bin/env"
			checkreturn="false"
			passthru="true">

			<arg value="php" />
			<arg value="./vendor/bin/pdepend" />
			<arg line="--jdepend-chart=./build/jdepend.svg" />
			<arg line="--jdepend-xml=./build/jdepend.xml" />
			<arg line="--overview-pyramid=./build/jdepend-pyramid.svg" />
			<arg line="--summary-xml=./build/pdepend-summary.xml" />
			<arg line="--suffix=php" />
			<arg value="./src/vantomas/Classes/" />
		</exec>
	</target>

	<target name="qa:phploc" description="Runs phploc on src/" depends="qa:prepare" unless="releasing">
		<exec
			executable="/usr/bin/env"
			checkreturn="false"
			passthru="true">

			<arg value="php" />
			<arg value="${project.basedir}/vendor/bin/phploc" />
			<arg line="--names=*.php" />
			<arg line="--log-csv=${project.basedir}/build/phploc.csv" />
			<arg line="--log-xml=${project.basedir}/build/phploc.xml" />
			<arg line="--progress " />
			<arg value="${project.basedir}/src/" />
		</exec>
	</target>

	<target name="qa:phpcpd" description="Runs phpcpd on src/" depends="qa:prepare" unless="releasing">
		<exec
			executable="/usr/bin/env"
			checkreturn="false"
			passthru="true">

			<arg value="php" />
			<arg value="${project.basedir}/vendor/bin/phpcpd" />
			<arg line="--names=*.php" />
			<arg line="--names-exclude=ext_emconf.php,ext_localconf.php,ext_tables.php" />
			<arg line="--log-pmd=${project.basedir}/build/phpcpd.xml" />
			<arg line="--progress" />
			<arg value="./src/" />
		</exec>
	</target>

	<target name="qa:phpcs" description="Runs phpcs on src/" depends="qa:prepare">
		<exec
			executable="/usr/bin/env"
			checkreturn="false"
			passthru="true">

			<arg value="php" />
			<arg value="${project.basedir}/vendor/bin/phpcs" />
			<arg line="-np" />
			<arg line="--report=checkstyle" />
			<arg line="--report-checkstyle=${project.basedir}/build/phpcs-checkstyle.xml" />
			<arg line="--standard=TYPO3CMS" />
			<arg line="--ignore=**/vendor/**" />
			<arg line="-d error_reporting='E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT &amp; ~E_DEPRECATED'" />
			<arg line="--extensions=php" />
			<arg value="${project.basedir}/src/" />
		</exec>
	</target>

	<target name="qa:phpunit" description="Runs phpunit on src/" depends="qa:prepare" unless="releasing">
		<exec
			executable="/usr/bin/env"
			checkreturn="true"
			passthru="true">

			<arg value="php" />
			<arg value="${project.basedir}/vendor/bin/phpunit" />
			<arg line="-c ${project.basedir}/phpunit.dist.xml" />
		</exec>
	</target>

	<target name="qa" description="Runs the QA toolchain" depends="qa:phpmd, qa:pdepend, qa:phploc, qa:phpcpd, qa:phpcs, qa:phpunit" unless="releasing">
		<echo>QA toolchain ready.</echo>
	</target>

	<target name="cleanup" description="Cleans up the release directory">
		<echo msg="Cleaning up ${buildDir}..." />
		<delete includeemptydirs="true">
			<fileset dir="${buildDir}">
				<include name="**" />

				<exclude name="fileadmin/**" />
				<exclude name="typo3conf/l10n/**" />
				<exclude name="typo3conf/AdditionalConfiguration.php" />
				<exclude name="typo3conf/LocalConfiguration.php" />
				<exclude name="typo3conf/PackageStates.php" />
				<exclude name="typo3temp/**" />
				<exclude name="uploads/**" />
			</fileset>
		</delete>
	</target>

	<target name="typo3:prepare">
		<mkdir dir="web/fileadmin/user_upload" />
		<mkdir dir="web/typo3conf/ext" />
		<mkdir dir="web/typo3conf/l10n" />
		<mkdir dir="web/typo3temp" />
		<mkdir dir="web/uploads/media" />
		<mkdir dir="web/uploads/pics" />
	</target>

	<target name="typo3:copy-core" description="Copies the TYPO3 core into the release directory." depends="typo3:prepare">
		<copy todir="${buildDir}" overwrite="true">
			<fileset dir="./vendor/typo3/cms/">
				<include name="**/**" />

				<exclude name="**/.git*" />
				<exclude name="**/.travis.yml" />
				<exclude name="**/ChangeLog" />
				<exclude name="**/GPL.txt" />
				<exclude name="**/INSTALL.md" />
				<exclude name="**/LICENSE.txt" />
				<exclude name="**/NEWS.md" />
				<exclude name="**/README.md" />
			</fileset>
		</copy>
	</target>

	<target name="typo3:copy-vendor-extensions" description="Copies the vendor extension into the typo3conf/ext/ release directory" depends="typo3:prepare">
		<copy todir="${buildDir}/typo3conf/ext">
			<fileset dir="./vendor/typo3-cms-extension">
				<include name="**/**" />

				<exclude name="**/.git*" />
			</fileset>
		</copy>
	</target>

	<target name="typo3:copy-project-extensions" description="Copies the project extensions into the typo3conf/ext/ release directory" depends="typo3:prepare">
		<copy todir="src/" overwrite="true">
			<mapper type="regexp" from="^(.*)\.tpl\.(.*)" to="\1.\2" />
			<filterchain>
				<expandproperties />
			</filterchain>

			<fileset dir="./src">
				<include name="**/**" />

				<exclude name="**/.git*" />
			</fileset>
		</copy>
		
		<exec
			command="/usr/bin/env grunt build"
			passthru="true"
			checkreturn="true" />

		<copy todir="${buildDir}/typo3conf/ext" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>

			<fileset dir="./src">
				<include name="**/**" />

				<exclude name="**/.git*" />
				<exclude name="**/*.tpl.*" />
			</fileset>
		</copy>
	</target>

	<target name="typo3:copy-extensions" description="Copies the extensions into typo3conf/ext/ release directory" depends="typo3:copy-vendor-extensions, typo3:copy-project-extensions">
		<echo>Extensions copied.</echo>
	</target>

	<target name="copy-web-data" description="Copies data/web/ into the release directory">
		<!-- copy non-template files -->
		<copy todir="${buildDir}" overwrite="true">
			<fileset dir="./data/web">
				<include name="**/**" />
				<exclude name="**/*.tpl.*" />
			</fileset>
		</copy>
		
		<!-- read basic auth htaccess template -->
		<if>
			<isset property="useBasicAuth" />
			<then>
				<loadfile property="basic_auth.htaccess" file="./data/web/basic_auth.tpl.htaccess" />

				<copy file="./data/.tpl.htpasswd" tofile="./data/.htpasswd">
					<filterchain>
						<expandproperties />
					</filterchain>
				</copy>
			</then>
			<else>
				<property name="basic_auth.htaccess" value="#" />
			</else>
		</if>

		<!-- copy tpl files, rename them and insert properties -->
		<copy todir="${buildDir}" overwrite="true">
			<fileset dir="./data/web">
				<include name="**/**" />
				<exclude name="**/basic_auth.tpl.htaccess" />
			</fileset>

			<mapper type="regexp" from="^(.*)\.tpl\.(.*)" to="\1.\2" />

			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>

	<target name="run" depends="qa, cleanup, typo3:copy-core, typo3:copy-extensions, copy-web-data" if="environment">
		<echo>Build finished.</echo>
	</target>

	<target name="sync:db" description="Downsyncs the database from the remote host.">
		<exec
			command="ssh -p ${ssh.port} ${ssh.user}@${ssh.host} 'cd ${remote.path} &amp;&amp; mysqldump -u${database.username} -p${database.password} -h ${database.host} ${database.name} | gzip -9 &gt; dump.sql.gz'" />

		<exec
			command="rsync -avz --progress ${ssh.user}@${ssh.host}:${remote.path}/dump.sql.gz ${project.basedir}/data/db/"
			passthru="true" />

		<exec
			command="ssh -p ${ssh.port} ${ssh.user}@${ssh.host} 'cd ${remote.path} &amp;&amp; rm -f dump.sql.gz'" />
	</target>

	<target name="sync:files" description="Downsyncs the content assets">
		<exec
			command="rsync -ravc --progress --rsh='ssh -p${ssh.port}' --exclude-from=${project.basedir}/rsync/file_sync_exclude.txt ${ssh.user}@${ssh.host}:${remote.path}/fileadmin/ ${project.basedir}/data/web/fileadmin"
			passthru="true" />
	</target>
	
	<target name="release" description="Releases the TYPO3.CMS project" if="release.target">
		<echo>Creating temp dir and cloning project...</echo>
		<delete
			dir="/tmp/tmp-${phing.project.name}" />
		<mkdir
			dir="/tmp/tmp-${phing.project.name}" />

		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="git clone $(git config remote.origin.url) ."
			passthru="true" />

		<echo>Installing composer into temp dir</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="curl -sS https://getcomposer.org/installer | php"
			passthru="true" />

		<echo>Installing dependencies (--no-dev)</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="/usr/bin/env php composer.phar install --no-dev"
			passthru="true" />

		<echo>Installing node.js modules and bower components</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="/usr/bin/env npm install &amp;&amp; /usr/bin/env bower install --config.interactive=false"
			passthru="true" />

		<echo>Copying secret properties file for ${release.target}</echo>
		<copy
			file="secret.${release.target}.properties"
			todir="/tmp/tmp-${phing.project.name}" />

		<echo>Running build toolchain for ${release.target}</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="/usr/bin/env php /vagrant/vendor/bin/phing -Denvironment=${release.target} -Dreleasing=1"
			passthru="true" />

		<echo>Rsyncing to ${release.target}</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="rsync -ravc --progress --delete --rsh='ssh -p${ssh.port}' --exclude-from=${project.basedir}/rsync/release_exclude.txt . ${ssh.user}@${ssh.host}:${remote.path}/"
			passthru="true" />
		
		<echo>Uploading .htpasswd</echo>
		<exec
			dir="/tmp/tmp-${phing.project.name}"
			command="rsync -ravc --progress --rsh='ssh -p${ssh.port}' ./data/.htpasswd ${ssh.user}@${ssh.host}:${remote.path}/"
			passthru="true" />
	</target>
</project>