<?xml version="1.0" encoding="UTF-8"?>
<project name="vantomas" default="run">

	<property name="import.dir" value="./" />
	<property name="typo3.copy-extensions.project.preCopyDist" value="runGrunt" />

	<!-- qa: paths -->
	<property name="qa.paths.phpmd" value="${application.startdir}/web/typo3conf/ext/vantomas/" />
	<property name="qa.paths.pdepend" value="${application.startdir}/web/typo3conf/ext/vantomas/" />
	<property name="qa.paths.phploc" value="${application.startdir}/web/typo3conf/ext/vantomas/" />
	<property name="qa.paths.phpcpd" value="${application.startdir}/web/typo3conf/ext/vantomas/" />
	<property name="qa.paths.phpcs" value="${application.startdir}/web/typo3conf/ext/vantomas/" />

	<!-- qa: reports -->
	<property name="qa.reports.phpmd" value="pmd-report-per-class" />
	<property name="qa.reports.pdepend" value="jdepend-apache" />
	<!-- <property name="qa.reports.phploc" value="" /> -->
	<property name="qa.reports.phpcpd" value="cpdhtml" />
	<property name="qa.reports.phpcs" value="checkstyle-noframes-severity-sorted" />

	<!-- tagging the release in a HTML comment -->
	<exec
		outputProperty="git.revision.head"
		command="git rev-parse HEAD" />

	<import file="${import.dir}/vendor/dreadlabs/typo3-build/build.xml" />

	<target name="run">
		<phingcall target="main:run" />
		<phingcall target="setup:composer" />
	</target>

	<target name="runGrunt">
		<exec
			command="./build-fe.sh"
			passthru="true"
			checkreturn="true" />
	</target>

	<target name="setup:composer">
		<echo>Installing composer and the project dependencies</echo>
		<if>
			<available property="composerIsInstalled" file="./composer.phar" />
			<then>
				<exec command="./composer.phar self-update" checkreturn="true" passthru="true" />
			</then>
			<else>
				<exec executable="curl" level="debug">
					<arg line="-sS https://getcomposer.org/installer | php" />
				</exec>
			</else>
		</if>
		<exec
			command="./composer.phar install" />
	</target>

	<target name="setup:node">
		<if>
			<not>
				<available file="./.nvm/nvm.sh" />
			</not>
			<then>
				<exec
					command="curl https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | NVM_DIR=${application.startdir}/.nvm bash"
					passthru="true"
					escape="false"
					/>
			</then>
		</if>
	</target>

	<target name="setup:bower-grunt" depends="setup:node">
		<exec command="./setup-fe.sh" passthru="true" checkreturn="true" />
		<exec command="./build-fe.sh" passthru="true" checkreturn="true" />
	</target>

	<target name="setup" depends="setup:composer, setup:bower-grunt">
		<phingcall target="typo3:configure-core" />
		<phingcall target="typo3:project-extensions:prepare" />
		<phingcall target="main:copy-web-data" />
		<phingcall target="config:migrations" />
	</target>

	<target name="doc:api:generate">
		<exec
			executable="/usr/bin/env"
			checkreturn="false"
			passthru="true">

			<arg value="php" />
			<arg value="${application.startdir}/vendor/bin/apigen" />
			<arg line="generate" />
			<arg line="--source='${application.startdir}/web/typo3conf/ext/vantomas/Classes/'" />
			<arg line="--destination='${application.startdir}/build/apigen/'" />
			<arg line="--access-levels=public,protected,private" />
			<arg line="--template-theme=default" />
			<arg line="--title='van-tomas.de TYPO3.CMS project'" />
			<arg line="--no-source-code" />
		</exec>
	</target>

	<target name="config:migrations"
			description="Prepares the migration configuration">

		<copy tofile="${application.startdir}/phinx.yml" file="${application.startdir}/phinx.tpl.yml" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>

	</target>
</project>
